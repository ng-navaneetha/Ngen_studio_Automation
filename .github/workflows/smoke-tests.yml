name: NgenStudio report

on:
  schedule:
    - cron: "30 3 * * 1-5"   # 9:00 AM IST, Mondayâ€“Friday
  workflow_dispatch:

jobs:
  smoke:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Cache Playwright browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Playwright smoke tests
        run: |
          mkdir -p reports
          npx playwright test --grep @smoke --browser ${{ matrix.browser }} --reporter=json,html
          ts=$(date +'%Y-%m-%d_%H-%M-%S')
          mv playwright-report "reports/$ts-${{ matrix.browser }}"
          mv results.json "reports/$ts-${{ matrix.browser }}/results.json"
          echo "REPORT_TS=$ts" >> $GITHUB_ENV

      - name: Upload reports as artifact
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.browser }}
          path: reports/

  merge-reports:
    needs: smoke
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download reports
        uses: actions/download-artifact@v4
        with:
          path: reports

      - name: Merge Playwright reports
        run: |
          mkdir -p merged-report
          npx playwright merge-reports --reporter html,json reports/*/*

      - name: Deploy merged report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./playwright-report
          publish_branch: gh-pages
          keep_files: true

      - name: Parse results and send summary to Teams
        run: |
          summary=$(jq -r '
            .suites[].specs[]? |
            .title + " â†’ " + (.tests[0].results[0].status)
          ' playwright-report/results.json | sed ':a;N;$!ba;s/\n/\\n/g')

          latest_url="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"

          curl -H 'Content-Type: application/json' \
            -d "{\"text\": \"ðŸ§ª Playwright Smoke Test Report\n\n$summary\n\nðŸ“‘ [View Full Report]($latest_url)\"}" \
            ${{ secrets.TEAMS_WEBHOOK_URL }}
